
-- 8 Coats of GLOSS -----------------------------------------------------------

Gloss hides the pain of drawing simple vector graphics behind a nice
data type and a few display functions. 

EXAMPLE
    Getting something on the screen is as easy as:

      import Graphics.Gloss
      main = displayInWindow "My Window" (200, 200) (10, 10) white (Circle 80)


USAGE
    Once the window is open you can use the following:
      * Quit            - esc-key.
      * Move Viewport   - left-click drag, arrow keys.
      * Rotate Viewport - right-click drag, control-left-click drag, 
                          or home/end-keys.
      * Zoom Viewport   - mouse wheel, or page up/down-keys.

OTHER THINGS
    Animations and simulations can be constructed similarly using the
    animateInWindow and simulateInWindow functions.

    See the gloss-examples package for more.

-------------------------------------------------------------------------------
Release Notes:

 For 1.4.0:
     Thanks to Christiaan Baaij: 
      * New support for using GLFW as the window library instead of GLUT.
        GLUT is still the default, but to use GLFW install gloss with:
          cabal install gloss --flags=\"GLFW -GLUT\"
    
 For 1.3.0:
     * Various wibbles for GHC 7.1   
     Thanks to Ben Lambert-Smith:
     * New support for displaying bitmap files.

 For 1.2.0:
     * Cleaned up module hierarchy.
     * Added line-line intersection utils.
     * Enabled -Wall and fixed all warnings.
     * Various wibbles for GHC 7.0
     Thanks to Thomas DuBuisson:
     * Fixed a bug causing motion events to give the wrong position.
     Thanks to Stephan Maka:
     * Fixed a space leak in simulate mode when the window was hidden.

 For 1.1.0:
     * Added game mode.
     * Added QuadTree and Extent structures.
     * Added simple ray casting.
    
    